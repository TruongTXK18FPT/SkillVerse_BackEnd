spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/SkillVerseDB}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:12345}

  jpa:
    hibernate:
      ddl-auto: update # create, create-drop, update, validate, none
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  servlet:
    multipart:
      enabled: true
      max-file-size: 500MB
      max-request-size: 500MB
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}

  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:skillverseexe@gmail.com}
    password: ${SPRING_MAIL_PASSWORD:fgbx gygh iglz dcou} # Gmail App Password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

  jackson:
    # Thời gian, ngày tháng
    date-format: ${SPRING_JACKSON_DATE_FORMAT:yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}
    time-zone: ${SPRING_JACKSON_TIME_ZONE:Asia/Ho_Chi_Minh}

    # Cách hiển thị
    serialization:
      indent-output: true # format JSON đẹp dễ đọc
      write-dates-as-timestamps: false # in ISO-8601 thay vì epoch

    deserialization:
      fail-on-unknown-properties: false # bỏ qua field lạ trong JSON input

    mapper:
      accept-case-insensitive-enums: true # cho phép enum không phân biệt hoa/thường

  # Spring AI Configuration
  # Using Mistral AI for chatbot and Gemini (via OpenAI-compatible API) for roadmap
  # Simple API key authentication - no Google Cloud setup needed!
  ai:
    mistralai:
      api-key: ${MISTRAL_API_KEY:bmme3URCCoCQUg3JNdO56ARhSkzfOnKZ}
      chat:
        enabled: ${MISTRAL_ENABLED:true}
        options:
          model: ${MISTRAL_API_MODEL:mistral-large-latest}
          temperature: ${MISTRAL_API_TEMPERATURE:0.7}
          max-tokens: ${MISTRAL_API_MAX_TOKENS:30000}

    # OpenAI configuration - using Gemini's OpenAI-compatible endpoint
    openai:
      api-key: ${GEMINI_API_KEY:AIzaSyA3IZ1rLOOox7_QsB8UvxzecNHL0xax0J4}
      base-url: ${GEMINI_OPENAI_BASE_URL:https://generativelanguage.googleapis.com/v1beta/openai/}
      chat:
        enabled: ${GEMINI_ENABLED:true}
        options:
          model: ${GEMINI_MODEL:gemini-2.5-flash-preview-09-2025}
          temperature: ${GEMINI_TEMPERATURE:0.7}
          max-tokens: ${GEMINI_MAX_TOKENS:30000}

    # Retry Configuration
    retry:
      max-attempts: 3
      on-client-errors: false

# Application Configuration
application:
  # Direct Gemini API Configuration (for roadmap generation)
  # Get your API key from: https://makersuite.google.com/app/apikey
  gemini:
    api-key: ${GEMINI_API_KEY:AIzaSyA3IZ1rLOOox7_QsB8UvxzecNHL0xax0J4}
    api-url: ${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent}
    model: ${GEMINI_MODEL:gemini-2.5-flash-preview-09-2025}

jwt:
  secret: ${JWT_SECRET:1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600} # 1 hour in seconds
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:86400} # 24 hours in seconds

email:
  from: ${EMAIL_FROM:skillverseexe@gmail.com}
  from-name: ${EMAIL_FROM_NAME:SkillVerse}

cors:
  allowed:
    origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000,http://localhost:52514,https://skillverse.vn,https://www.skillverse.vn}
    methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
    headers: ${CORS_ALLOWED_HEADERS:*}
  allow:
    credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max:
    age: ${CORS_MAX_AGE:3600}

gemini:
  api:
    key: ${GEMINI_API_KEY:AIzaSyA3IZ1rLOOox7_QsB8UvxzecNHL0xax0J4}
    base-url: ${GEMINI_API_BASE_URL:https://generativelanguage.googleapis.com/v1beta/models/}
    # Primary model - fallbacks configured in service layer
    model: ${GEMINI_API_MODEL:gemini-2.5-flash-preview-09-2025}
    fallback-models: ${GEMINI_FALLBACK_MODELS:gemini-2.0-flash,gemini-1.5-flash}
    timeout: ${GEMINI_API_TIMEOUT:30000}
    max-tokens: ${GEMINI_API_MAX_TOKENS:30000}
    temperature: ${GEMINI_API_TEMPERATURE:0.7}

# Mistral AI Configuration (for latest career trends and information)
mistral:
  api:
    key: ${MISTRAL_API_KEY:bmme3URCCoCQUg3JNdO56ARhSkzfOnKZ}
    base-url: ${MISTRAL_API_BASE_URL:https://api.mistral.ai/v1/chat/completions}
    model: ${MISTRAL_API_MODEL:mistral-large-latest}
    timeout: ${MISTRAL_API_TIMEOUT:30000}
    max-tokens: ${MISTRAL_API_MAX_TOKENS:30000}
    temperature: ${MISTRAL_API_TEMPERATURE:0.7}
    enabled: ${MISTRAL_ENABLED:true}

# AI Provider Selection
ai:
  provider:
    # Primary provider for roadmap generation: gemini or mistral
    roadmap: ${AI_PROVIDER_ROADMAP:gemini}
    # Primary provider for chatbot (career trends, latest info): gemini or mistral
    chatbot: ${AI_PROVIDER_CHATBOT:mistral}
    # Enable automatic fallback if primary provider fails
    enable-fallback: ${AI_ENABLE_FALLBACK:true}

# Payment Gateway Configuration
payment:
  payos:
    client-id: ${PAYOS_CLIENT_ID:dd239d22-5ff6-4113-bc74-8c71f55147fd}
    api-key: ${PAYOS_API_KEY:9f1a0f8b-fbae-495a-b2f6-52e72ac155ca}
    checksum-key: ${PAYOS_CHECKSUM_KEY:e53324608b59a5614972388adfc79b36b12c2ae5e141470a0d51b82ca6bebc92}
    base-url: ${PAYOS_BASE_URL:https://api-merchant.payos.vn}
    webhook-url: ${PAYOS_WEBHOOK_URL:http://localhost:8080/api/v1/payments/callback/payos}

# Premium Subscription Configuration
premium:
  plans:
    # Auto-create premium plans on startup (for development)
    auto-create: ${PREMIUM_AUTO_CREATE_PLANS:true}

  subscription:
    # Default subscription settings
    default-currency: VND
    reminder-days-before-expiry: 7
    grace-period-days: 3

    # Student discount settings
    student-email-domains:
      - .edu
      - .edu.vn
      - .ac.uk
      - university.
      - student.

# Cloudinary Configuration (Media Upload)
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:djv7loilz}
  api-key: ${CLOUDINARY_API_KEY:916727194348317}
  api-secret: ${CLOUDINARY_API_SECRET:hTqjRjjr3UtFz0xZ-72Ux-iPVO0}
  url: ${CLOUDINARY_URL:cloudinary://916727194348317:hTqjRjjr3UtFz0xZ-72Ux-iPVO0@djv7loilz}
  upload:
    folder: skillverse # Base folder for uploads
    resource-type: auto # auto, image, video, raw
    use-filename: true
    unique-filename: true
    overwrite: false

springdoc:
  api-docs:
    enabled: ${SPRINGDOC_API_DOCS_ENABLED:true}
    path: ${SPRINGDOC_API_DOCS_PATH:/v3/api-docs}
  swagger-ui:
    enabled: ${SPRINGDOC_SWAGGER_UI_ENABLED:true}
    path: ${SPRINGDOC_SWAGGER_UI_PATH:/swagger-ui.html}

server:
  port: ${SERVER_PORT:8080}

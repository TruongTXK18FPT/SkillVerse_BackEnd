spring:
  datasource:
    # Shared PostgreSQL database on VPS for both CI/CD and production
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://221.132.33.141:5432/skillverse_db}
    username: ${SPRING_DATASOURCE_USERNAME:skillverse_user}
    password: ${SPRING_DATASOURCE_PASSWORD:12345}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      # Use 'update' to auto-update schema, 'validate' for strict validation
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create} # create, create-drop, update, validate, none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        "[format_sql]": true
        "[jdbc.lob.non_contextual_creation]": true

  servlet:
    multipart:
      enabled: true
      max-file-size: 500MB
      max-request-size: 500MB
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}

  mail:
    host: ${SPRING_MAIL_HOST:smtp.gmail.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:skillverseexe@gmail.com}
    password: ${SPRING_MAIL_PASSWORD:secret_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jackson:
    time-zone: ${SPRING_JACKSON_TIME_ZONE:Asia/Ho_Chi_Minh}
    date-format: ${SPRING_JACKSON_DATE_FORMAT:yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}

  data:
    redis:
      host: redis
      port: 6379
      password: secret_password
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

server:
  port: ${SERVER_PORT:8080}
  address: 0.0.0.0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

jwt:
  secret: ${JWT_SECRET:default-jwt-secret-key-for-production-change-this}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:86400}

email:
  from: ${EMAIL_FROM:skillverseexe@gmail.com}
  from-name: ${EMAIL_FROM_NAME:SkillVerse}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:3600}

logging:
  level:
    com.exe.skillverse_backend: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
